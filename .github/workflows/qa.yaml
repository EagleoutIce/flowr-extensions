name: "QA"
# Runs on each push and tests flowR for the default configuration
# Depending on the targets etc. this may perform many more checks!

'on':
  push:
    paths-ignore:
      - '**/*.md'
      - 'LICENSE'
      - '.gitignore'
      - 'scripts/**'
  pull_request:
    types: [ opened, synchronize ]
    branches: [ main ]
    paths-ignore:
      - '**/*.md'
      - 'LICENSE'
      - '.gitignore'
      - 'scripts/**'
  workflow_dispatch:
    inputs:
      force-full:
        description: "Force all steps"
        required: true
        default: false
        type: boolean

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  deployments: write
  contents:    write

jobs:
  debug:
    name: "Debug"
    runs-on: ubuntu-latest
    steps:
      - name: "üåç Load Versions to Use"
        id: doc-global-versions
        run: bash .github/workflows/scripts/global-configuration.sh

      - name: "üîç Debug state"
        run: |
          echo "::group::Versions"
          echo "Node Version: $ACTION_NODE_VERSION"
          echo "R Version: $ACTION_R_VERSION"
          echo "::endgroup::"          
          echo "::group::Git Info"
          echo "Event: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
          echo "Base Ref: ${{ github.base_ref }}"
          echo "Head Commit: ${{ github.sha }}"
          echo "::endgroup::"          

  lint:
    needs: [ debug ]
    name: "Linting (Local)"
    if: ${{ github.event_name != 'pull_request' || github.event.pull_request.base.ref != 'main' }}
    uses: flowr-analysis/flowr/.github/workflows/run.yaml@main
    with:
      r-version: ''
      action:    lint-local

  test:
    needs: [ debug ]
    name: "Test Suite (coverage)"
    if: ${{ github.event_name != 'pull_request' || github.event.pull_request.base.ref != 'main' }}
    uses: flowr-analysis/flowr/.github/workflows/run.yaml@main
    with:
      action: test-full -- --forbid-only
      coverage: true
    secrets: inherit

  performance-test:
    needs: [ test ]
    name: "Performance Test"
    # we do not run if the release workflow runs it with pushing
    if: ${{
              always()
          && !failure()
          && (inputs.force-full || (github.event_name == 'push' && github.ref == 'refs/heads/main'))
          && !(
                startsWith(github.event.head_commit.message, '[release:minor]') ||
                startsWith(github.event.head_commit.message, '[release:major]') ||
                startsWith(github.event.head_commit.message, '[release:patch]')
              )
      }}
    uses: flowr-analysis/flowr/.github/workflows/performance-test.yaml@main
    with:
      push: false
    secrets: inherit

  full-test:
    needs: [ lint ]
    name: "Full Test Suite"
    if: ${{
              always()
          && !failure()
          && (inputs.force-full || (github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'main'))
      }}
    uses: flowr-analysis/flowr/.github/workflows/full-test.yaml@main

  deploy-doc:
    needs: [ test, full-test, performance-test ]
    name: "Build and Deploy Documentation (only on main)"
    if: ${{ always() && !failure() && (inputs.force-full || (github.event_name == 'push' && github.ref == 'refs/heads/main')) }}
    runs-on: ubuntu-latest
    timeout-minutes: 15
    concurrency:
      group: doc-${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: "üõí Checkout Repository"
        uses: actions/checkout@v4
        with:
            submodules: true

      - name: "üåç Load Versions to Use"
        id: doc-global-versions
        run: bash .github/workflows/scripts/global-configuration.sh

      - name: "‚¨áÔ∏è Use Node.js"
        uses: actions/setup-node@v4
        with:
          node-version: $ACTION_NODE_VERSION
          registry-url: "https://registry.npmjs.org/"
      
      - name: "‚¨áÔ∏è Setup R"
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: $ACTION_R_VERSION
      
      - name: "üì¶ Install R packages"
        shell: Rscript {0}
        run: install.packages("xmlparsedata", repos="https://cloud.r-project.org/")
        
      - name: "üõ†Ô∏è Build the documentation"
        run: bash .github/workflows/scripts/run-flowr-command.sh doc

      - name: "‚¨ÜÔ∏è Push New Documentation"
        uses: ad-m/github-push-action@master
        with:
          branch: gh-pages
          github_token: ${{ secrets.RELEASE_TOKEN }}
          force: true
